language: php

dist: bionic

services:
  - mysql
  - postgresql

cache:
  directories:
    - $HOME/.composer/cache/files

env:
  global:
    - COMPOSER_ROOT_VERSION=4.x-dev

matrix:
  include:
    - php: 7.1
      env: DB=PGSQL RECIPE_VERSION=4.3.x-dev  PHPUNIT_TEST=1
    - php: 7.2
      env: DB=MYSQL RECIPE_VERSION=4.4.x-dev PHPUNIT_TEST=1
    - php: 7.3
      env: DB=MYSQL RECIPE_VERSION=4.4.x-dev PHPUNIT_COVERAGE_TEST=1
    - php: 7.3
      env: DB=MYSQL RECIPE_VERSION=4.4.x-dev PHPUNIT_TEST=1
    - php: 7.3
      env: DB=MYSQL RECIPE_VERSION=4.x-dev PHPUNIT_TEST=1
    - php: 7.3
      env: DB=MYSQL RECIPE_VERSION=4.x-dev PHPCS_TEST=1

before_install:
  - mysql -e 'CREATE DATABASE IF NOT EXISTS travis_ci_test;'
  - psql -c 'create database travis_ci_test;' -U postgres

before_script:
  # Init PHP
  - phpenv rehash
  - phpenv config-rm xdebug.ini
  - echo 'memory_limit = 2G' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - 'export UNIT_TESTING_CONFIG_ENABLED=1'
  - pwd
  - ls -al
  - echo 'SS_BASE_URL="http://localhost"' > .env
  - echo 'SS_DATABASE_CLASS="MySQLPDODatabase"' >> .env
  - echo 'SS_DATABASE_NAME="travis_ci_test"' >> .env
  - echo 'SS_DATABASE_USERNAME="root"' >> .env
  - echo 'SS_DATABASE_PASSWORD=""' >> .env
  - echo 'SS_DATABASE_SERVER="localhost"' >> .env
  - cat .env









  # Install composer dependencies
  - composer validate # --strict here?
  - composer require silverstripe/recipe-cms:"$RECIPE_VERSION" silverstripe/recipe-testing:^1 --no-update
  - composer require --no-update silverstripe/widgets
  - if [[ $BEHAT_TEST ]]; then composer require --no-update silverstripe/behat-extension:4.x-dev; fi;
  - if [[ $DB == PGSQL ]]; then composer require silverstripe/postgresql:^2 --no-update; fi
  - composer install --prefer-source --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile


  # Run dev/build
  - vendor/bin/sake dev/build flush=all

  # Dump constants for debug
  - php vendor/silverstripe/framework/tests/dump_constants.php

script:
  - 'if [[ $PHPUNIT_TEST ]]; then vendor/bin/phpunit tests '''' flush=all; fi'
  - 'if [[ $PHPUNIT_COVERAGE_TEST ]]; then phpdbg -qrr vendor/bin/phpunit tests --coverage-clover=coverage.xml '''' flush=all; fi'
  - 'if [[ $DUPLICATE_CODE_CHECK ]]; then node_modules/jscpd/bin/jscpd src && node_modules/jscpd/bin/jscpd tests ; fi'
  - 'if [[ $PHPCS_TEST ]]; then vendor/bin/phpcs --standard=ruleset.xml --extensions=php --tab-width=4 -sp src tests ; fi'
  - 'if [[ $LINT_CHECK ]]; then vendor/bin/parallel-lint src/ tests/ ; fi'
  - 'if [[ $PHPSTAN_TEST ]]; then vendor/bin/phpstan analyse --level=6 -c tests/phpstan.neon src/ ; fi'
after_script:
  - 'if [[ $PHPUNIT_COVERAGE_TEST ]]; then bash <(curl -s https://codecov.io/bash) -f coverage.xml; fi'
